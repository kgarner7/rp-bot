import {
  BelongsTo,
  BelongsToCreateAssociationMixin,
  BelongsToGetAssociationMixin,
  BelongsToMany,
  BelongsToManyAddAssociationMixin,
  BelongsToManyAddAssociationsMixin,
  BelongsToManyCountAssociationsMixin,
  BelongsToManyCreateAssociationMixin,
  BelongsToManyGetAssociationsMixin,
  BelongsToManyRemoveAssociationMixin,
  BelongsToManyRemoveAssociationsMixin,
  BelongsToManySetAssociationsMixin,
  BelongsToSetAssociationMixin,
  BOOLEAN,
  INTEGER,
  Model
} from "sequelize";

import { sequelize } from "./connection";

/**
 * Database model representing a one-way connection between two rooms
 * source {Room}: the source room
 * target {Room}: the target room
 * visitors {User[]}: list of all users that have used this link
 * @extends Model
 */
export class Link extends Model {
  public static associations: {
    source: BelongsTo;
    target: BelongsTo;
    visitors: BelongsToMany;
  };

  /** autogenerated ID */
  public id: number;
  /** whether the connection is locked or not */
  public locked: boolean;
  public createdAt?: Date;
  public updatedAt?: Date;

  public source: Room;
  public sourceId: string;
  public createSource: BelongsToCreateAssociationMixin<Room>;
  public getSource: BelongsToGetAssociationMixin<Room>;
  public setSource: BelongsToSetAssociationMixin<Room, string>;

  public target: Room;
  public targetId: string;
  public createTarget: BelongsToCreateAssociationMixin<Room>;
  public getTarget: BelongsToGetAssociationMixin<Room>;
  public setTarget: BelongsToSetAssociationMixin<Room, string>;

  public visitors: User[];
  public addVisitor: BelongsToManyAddAssociationMixin<User, string>;
  public addVisitors: BelongsToManyAddAssociationsMixin<User, string>;
  public countVisitors: BelongsToManyCountAssociationsMixin;
  public createVisitor: BelongsToManyCreateAssociationMixin<User>;
  public getVisitors: BelongsToManyGetAssociationsMixin<User>;
  public removeVisitor: BelongsToManyRemoveAssociationMixin<User, string>;
  public removeVisitors: BelongsToManyRemoveAssociationsMixin<User, string>;
  public setVisitors: BelongsToManySetAssociationsMixin<User, string>;
}

Link.init({
  id: {
    autoIncrement: true,
    primaryKey: true,
    type: INTEGER
  },
  locked: {
    allowNull: false,
    type: BOOLEAN
  }
}, { sequelize });

// tslint:disable-next-line:ordered-imports
import { Room } from "./room";
import { User } from "./user";

Link.belongsTo(Room, {
  as: "source"
});

Link.belongsTo(Room, {
  as: "target"
});

Link.belongsToMany(User, {
  as: "visitors",
  through: "Visitation"
});
